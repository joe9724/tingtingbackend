// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Body2 body 2
// swagger:model body_2
type Body2 struct {

	// 0表示添加，1表示移除
	// Required: true
	ActionCode *int64 `json:"actionCode"`

	// album ids
	// Required: true
	AlbumIds *string `json:"albumIds"`

	// sub category Id
	// Required: true
	SubCategoryID *int64 `json:"subCategoryId"`

	BookIds *string `json:"bookIds"`

	BookID *int64 `json:"bookId"`

	OriginID *int64 `json:"originId"`

	OriginOrder *int64 `json:"originOrder"`

	NewID *int64 `json:"newId"`

	NewOrder *int64 `json:"newOrder"`
}

// Validate validates this body 2
func (m *Body2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActionCode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAlbumIds(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSubCategoryID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Body2) validateActionCode(formats strfmt.Registry) error {

	if err := validate.Required("actionCode", "body", m.ActionCode); err != nil {
		return err
	}

	return nil
}

func (m *Body2) validateAlbumIds(formats strfmt.Registry) error {

	if err := validate.Required("albumIds", "body", m.AlbumIds); err != nil {
		return err
	}

	return nil
}

func (m *Body2) validateSubCategoryID(formats strfmt.Registry) error {

	if err := validate.Required("subCategoryId", "body", m.SubCategoryID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Body2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Body2) UnmarshalBinary(b []byte) error {
	var res Body2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
