// Code generated by go-swagger; DO NOT EDIT.

package icon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// IconUploadOKCode is the HTTP code returned for type IconUploadOK
const IconUploadOKCode int = 200

/*IconUploadOK 上传成功，返回成功信息

swagger:response iconUploadOK
*/
type IconUploadOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2002 `json:"body,omitempty"`
}

// NewIconUploadOK creates IconUploadOK with default headers values
func NewIconUploadOK() *IconUploadOK {
	return &IconUploadOK{}
}

// WithPayload adds the payload to the icon upload o k response
func (o *IconUploadOK) WithPayload(payload *models.InlineResponse2002) *IconUploadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the icon upload o k response
func (o *IconUploadOK) SetPayload(payload *models.InlineResponse2002) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IconUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*IconUploadDefault error

swagger:response iconUploadDefault
*/
type IconUploadDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewIconUploadDefault creates IconUploadDefault with default headers values
func NewIconUploadDefault(code int) *IconUploadDefault {
	if code <= 0 {
		code = 500
	}

	return &IconUploadDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the icon upload default response
func (o *IconUploadDefault) WithStatusCode(code int) *IconUploadDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the icon upload default response
func (o *IconUploadDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the icon upload default response
func (o *IconUploadDefault) WithPayload(payload *models.Error) *IconUploadDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the icon upload default response
func (o *IconUploadDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IconUploadDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
