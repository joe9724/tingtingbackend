// Code generated by go-swagger; DO NOT EDIT.

package web

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// WebListOKCode is the HTTP code returned for type WebListOK
const WebListOKCode int = 200

/*WebListOK web列表

swagger:response webListOK
*/
type WebListOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2002513 `json:"body,omitempty"`
}

// NewWebListOK creates WebListOK with default headers values
func NewWebListOK() *WebListOK {
	return &WebListOK{}
}

// WithPayload adds the payload to the web list o k response
func (o *WebListOK) WithPayload(payload *models.InlineResponse2002513) *WebListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the web list o k response
func (o *WebListOK) SetPayload(payload *models.InlineResponse2002513) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WebListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*WebListDefault error

swagger:response webListDefault
*/
type WebListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewWebListDefault creates WebListDefault with default headers values
func NewWebListDefault(code int) *WebListDefault {
	if code <= 0 {
		code = 500
	}

	return &WebListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the web list default response
func (o *WebListDefault) WithStatusCode(code int) *WebListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the web list default response
func (o *WebListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the web list default response
func (o *WebListDefault) WithPayload(payload *models.Error) *WebListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the web list default response
func (o *WebListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WebListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
