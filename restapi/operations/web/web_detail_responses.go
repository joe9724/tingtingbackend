// Code generated by go-swagger; DO NOT EDIT.

package web

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// WebDetailOKCode is the HTTP code returned for type WebDetailOK
const WebDetailOKCode int = 200

/*WebDetailOK web列表

swagger:response webDetailOK
*/
type WebDetailOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2001513 `json:"body,omitempty"`
}

// NewWebDetailOK creates WebDetailOK with default headers values
func NewWebDetailOK() *WebDetailOK {
	return &WebDetailOK{}
}

// WithPayload adds the payload to the web detail o k response
func (o *WebDetailOK) WithPayload(payload *models.InlineResponse2001513) *WebDetailOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the web detail o k response
func (o *WebDetailOK) SetPayload(payload *models.InlineResponse2001513) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WebDetailOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*WebDetailDefault error

swagger:response webDetailDefault
*/
type WebDetailDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewWebDetailDefault creates WebDetailDefault with default headers values
func NewWebDetailDefault(code int) *WebDetailDefault {
	if code <= 0 {
		code = 500
	}

	return &WebDetailDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the web detail default response
func (o *WebDetailDefault) WithStatusCode(code int) *WebDetailDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the web detail default response
func (o *WebDetailDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the web detail default response
func (o *WebDetailDefault) WithPayload(payload *models.Error) *WebDetailDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the web detail default response
func (o *WebDetailDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WebDetailDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
