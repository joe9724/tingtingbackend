// Code generated by go-swagger; DO NOT EDIT.

package book

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// BookDetailHandlerFunc turns a function with the right signature into a book detail handler
type BookDetailHandlerFunc func(BookDetailParams) middleware.Responder

// Handle executing the request and returning a response
func (fn BookDetailHandlerFunc) Handle(params BookDetailParams) middleware.Responder {
	return fn(params)
}

// BookDetailHandler interface for that can handle valid book detail params
type BookDetailHandler interface {
	Handle(BookDetailParams) middleware.Responder
}

// NewBookDetail creates a new http.Handler for the book detail operation
func NewBookDetail(ctx *middleware.Context, handler BookDetailHandler) *BookDetail {
	return &BookDetail{Context: ctx, Handler: handler}
}

/*BookDetail swagger:route GET /book/detail Book bookDetail

书本详情

书本详情

*/
type BookDetail struct {
	Context *middleware.Context
	Handler BookDetailHandler
}

func (o *BookDetail) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewBookDetailParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
