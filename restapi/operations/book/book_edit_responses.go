// Code generated by go-swagger; DO NOT EDIT.

package book

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/tingtingbackend/models"
)

// BookEditOKCode is the HTTP code returned for type BookEditOK
const BookEditOKCode int = 200

/*BookEditOK 上传成功，返回成功信息

swagger:response bookEditOK
*/
type BookEditOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20015 `json:"body,omitempty"`
}

// NewBookEditOK creates BookEditOK with default headers values
func NewBookEditOK() *BookEditOK {
	return &BookEditOK{}
}

// WithPayload adds the payload to the book edit o k response
func (o *BookEditOK) WithPayload(payload *models.InlineResponse20015) *BookEditOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the book edit o k response
func (o *BookEditOK) SetPayload(payload *models.InlineResponse20015) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BookEditOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*BookEditDefault error

swagger:response bookEditDefault
*/
type BookEditDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBookEditDefault creates BookEditDefault with default headers values
func NewBookEditDefault(code int) *BookEditDefault {
	if code <= 0 {
		code = 500
	}

	return &BookEditDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the book edit default response
func (o *BookEditDefault) WithStatusCode(code int) *BookEditDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the book edit default response
func (o *BookEditDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the book edit default response
func (o *BookEditDefault) WithPayload(payload *models.Error) *BookEditDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the book edit default response
func (o *BookEditDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BookEditDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
