// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/tingtingbackend/models"
)

// CategoryEditOKCode is the HTTP code returned for type CategoryEditOK
const CategoryEditOKCode int = 200

/*CategoryEditOK 上传成功，返回成功信息

swagger:response categoryEditOK
*/
type CategoryEditOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20015 `json:"body,omitempty"`
}

// NewCategoryEditOK creates CategoryEditOK with default headers values
func NewCategoryEditOK() *CategoryEditOK {
	return &CategoryEditOK{}
}

// WithPayload adds the payload to the category edit o k response
func (o *CategoryEditOK) WithPayload(payload *models.InlineResponse20015) *CategoryEditOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the category edit o k response
func (o *CategoryEditOK) SetPayload(payload *models.InlineResponse20015) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CategoryEditOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CategoryEditDefault error

swagger:response categoryEditDefault
*/
type CategoryEditDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCategoryEditDefault creates CategoryEditDefault with default headers values
func NewCategoryEditDefault(code int) *CategoryEditDefault {
	if code <= 0 {
		code = 500
	}

	return &CategoryEditDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the category edit default response
func (o *CategoryEditDefault) WithStatusCode(code int) *CategoryEditDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the category edit default response
func (o *CategoryEditDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the category edit default response
func (o *CategoryEditDefault) WithPayload(payload *models.Error) *CategoryEditDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the category edit default response
func (o *CategoryEditDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CategoryEditDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
