// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrCategoryIconsEditHandlerFunc turns a function with the right signature into a category icons edit handler
type NrCategoryIconsEditHandlerFunc func(NrCategoryIconsEditParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrCategoryIconsEditHandlerFunc) Handle(params NrCategoryIconsEditParams) middleware.Responder {
	return fn(params)
}

// NrCategoryIconsEditHandler interface for that can handle valid category icons edit params
type NrCategoryIconsEditHandler interface {
	Handle(NrCategoryIconsEditParams) middleware.Responder
}

// NewNrCategoryIconsEdit creates a new http.Handler for the category icons edit operation
func NewNrCategoryIconsEdit(ctx *middleware.Context, handler NrCategoryIconsEditHandler) *NrCategoryIconsEdit {
	return &NrCategoryIconsEdit{Context: ctx, Handler: handler}
}

/*NrCategoryIconsEdit swagger:route POST /category/icons/edit Category categoryIconsEdit

编辑子类下的icon

编辑子类下的icon

*/
type NrCategoryIconsEdit struct {
	Context *middleware.Context
	Handler NrCategoryIconsEditHandler
}

func (o *NrCategoryIconsEdit) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrCategoryIconsEditParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
