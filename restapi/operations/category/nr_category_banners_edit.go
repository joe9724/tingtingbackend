// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrCategoryBannersEditHandlerFunc turns a function with the right signature into a category banners edit handler
type NrCategoryBannersEditHandlerFunc func(NrCategoryBannersEditParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrCategoryBannersEditHandlerFunc) Handle(params NrCategoryBannersEditParams) middleware.Responder {
	return fn(params)
}

// NrCategoryBannersEditHandler interface for that can handle valid category banners edit params
type NrCategoryBannersEditHandler interface {
	Handle(NrCategoryBannersEditParams) middleware.Responder
}

// NewNrCategoryBannersEdit creates a new http.Handler for the category banners edit operation
func NewNrCategoryBannersEdit(ctx *middleware.Context, handler NrCategoryBannersEditHandler) *NrCategoryBannersEdit {
	return &NrCategoryBannersEdit{Context: ctx, Handler: handler}
}

/*NrCategoryBannersEdit swagger:route POST /category/banners/edit Category categoryBannersEdit

编辑子类下的banner

编辑子类下的banner

*/
type NrCategoryBannersEdit struct {
	Context *middleware.Context
	Handler NrCategoryBannersEditHandler
}

func (o *NrCategoryBannersEdit) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrCategoryBannersEditParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
