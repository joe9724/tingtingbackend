// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// CategorySubEditOKCode is the HTTP code returned for type CategorySubEditOK
const CategorySubEditOKCode int = 200

/*CategorySubEditOK 上传成功，返回成功信息

swagger:response categorySubEditOK
*/
type CategorySubEditOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20016 `json:"body,omitempty"`
}

// NewCategorySubEditOK creates CategorySubEditOK with default headers values
func NewCategorySubEditOK() *CategorySubEditOK {
	return &CategorySubEditOK{}
}

// WithPayload adds the payload to the category sub edit o k response
func (o *CategorySubEditOK) WithPayload(payload *models.InlineResponse20016) *CategorySubEditOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the category sub edit o k response
func (o *CategorySubEditOK) SetPayload(payload *models.InlineResponse20016) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CategorySubEditOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CategorySubEditDefault error

swagger:response categorySubEditDefault
*/
type CategorySubEditDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCategorySubEditDefault creates CategorySubEditDefault with default headers values
func NewCategorySubEditDefault(code int) *CategorySubEditDefault {
	if code <= 0 {
		code = 500
	}

	return &CategorySubEditDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the category sub edit default response
func (o *CategorySubEditDefault) WithStatusCode(code int) *CategorySubEditDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the category sub edit default response
func (o *CategorySubEditDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the category sub edit default response
func (o *CategorySubEditDefault) WithPayload(payload *models.Error) *CategorySubEditDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the category sub edit default response
func (o *CategorySubEditDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CategorySubEditDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
