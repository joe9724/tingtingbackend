// Code generated by go-swagger; DO NOT EDIT.

package relation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrRelationAlbumBooklistEditHandlerFunc turns a function with the right signature into a relation album booklist edit handler
type NrRelationAlbumBooklistEditHandlerFunc func(NrRelationAlbumBooklistEditParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrRelationAlbumBooklistEditHandlerFunc) Handle(params NrRelationAlbumBooklistEditParams) middleware.Responder {
	return fn(params)
}

// NrRelationAlbumBooklistEditHandler interface for that can handle valid relation album booklist edit params
type NrRelationAlbumBooklistEditHandler interface {
	Handle(NrRelationAlbumBooklistEditParams) middleware.Responder
}

// NewNrRelationAlbumBooklistEdit creates a new http.Handler for the relation album booklist edit operation
func NewNrRelationAlbumBooklistEdit(ctx *middleware.Context, handler NrRelationAlbumBooklistEditHandler) *NrRelationAlbumBooklistEdit {
	return &NrRelationAlbumBooklistEdit{Context: ctx, Handler: handler}
}

/*NrRelationAlbumBooklistEdit swagger:route POST /relation/album/booklist/edit Relation relationAlbumBooklistEdit

编辑专辑下的书本集合

编辑专辑下的书本集合

*/
type NrRelationAlbumBooklistEdit struct {
	Context *middleware.Context
	Handler NrRelationAlbumBooklistEditHandler
}

func (o *NrRelationAlbumBooklistEdit) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrRelationAlbumBooklistEditParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
