// Code generated by go-swagger; DO NOT EDIT.

package relation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrRelationCategorySubCategoryListEditHandlerFunc turns a function with the right signature into a relation category sub category list edit handler
type NrRelationCategorySubCategoryListEditHandlerFunc func(NrRelationCategorySubCategoryListEditParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrRelationCategorySubCategoryListEditHandlerFunc) Handle(params NrRelationCategorySubCategoryListEditParams) middleware.Responder {
	return fn(params)
}

// NrRelationCategorySubCategoryListEditHandler interface for that can handle valid relation category sub category list edit params
type NrRelationCategorySubCategoryListEditHandler interface {
	Handle(NrRelationCategorySubCategoryListEditParams) middleware.Responder
}

// NewNrRelationCategorySubCategoryListEdit creates a new http.Handler for the relation category sub category list edit operation
func NewNrRelationCategorySubCategoryListEdit(ctx *middleware.Context, handler NrRelationCategorySubCategoryListEditHandler) *NrRelationCategorySubCategoryListEdit {
	return &NrRelationCategorySubCategoryListEdit{Context: ctx, Handler: handler}
}

/*NrRelationCategorySubCategoryListEdit swagger:route POST /relation/Category/subCategoryList/edit Relation relationCategorySubCategoryListEdit

编辑大类下的子类集合

编辑大类下的子类集合

*/
type NrRelationCategorySubCategoryListEdit struct {
	Context *middleware.Context
	Handler NrRelationCategorySubCategoryListEditHandler
}

func (o *NrRelationCategorySubCategoryListEdit) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrRelationCategorySubCategoryListEditParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
