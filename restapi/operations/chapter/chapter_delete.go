// Code generated by go-swagger; DO NOT EDIT.

package chapter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ChapterDeleteHandlerFunc turns a function with the right signature into a chapter delete handler
type ChapterDeleteHandlerFunc func(ChapterDeleteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ChapterDeleteHandlerFunc) Handle(params ChapterDeleteParams) middleware.Responder {
	return fn(params)
}

// ChapterDeleteHandler interface for that can handle valid chapter delete params
type ChapterDeleteHandler interface {
	Handle(ChapterDeleteParams) middleware.Responder
}

// NewChapterDelete creates a new http.Handler for the chapter delete operation
func NewChapterDelete(ctx *middleware.Context, handler ChapterDeleteHandler) *ChapterDelete {
	return &ChapterDelete{Context: ctx, Handler: handler}
}

/*ChapterDelete swagger:route GET /chapter/delete Chapter chapterDelete

删除章节

删除章节

*/
type ChapterDelete struct {
	Context *middleware.Context
	Handler ChapterDeleteHandler
}

func (o *ChapterDelete) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewChapterDeleteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
