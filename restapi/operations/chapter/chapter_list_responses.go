// Code generated by go-swagger; DO NOT EDIT.

package chapter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// ChapterListOKCode is the HTTP code returned for type ChapterListOK
const ChapterListOKCode int = 200

/*ChapterListOK 登录成功，返回登录信息

swagger:response chapterListOK
*/
type ChapterListOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20023 `json:"body,omitempty"`
}

// NewChapterListOK creates ChapterListOK with default headers values
func NewChapterListOK() *ChapterListOK {
	return &ChapterListOK{}
}

// WithPayload adds the payload to the chapter list o k response
func (o *ChapterListOK) WithPayload(payload *models.InlineResponse20023) *ChapterListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chapter list o k response
func (o *ChapterListOK) SetPayload(payload *models.InlineResponse20023) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChapterListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ChapterListDefault error

swagger:response chapterListDefault
*/
type ChapterListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewChapterListDefault creates ChapterListDefault with default headers values
func NewChapterListDefault(code int) *ChapterListDefault {
	if code <= 0 {
		code = 500
	}

	return &ChapterListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the chapter list default response
func (o *ChapterListDefault) WithStatusCode(code int) *ChapterListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the chapter list default response
func (o *ChapterListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the chapter list default response
func (o *ChapterListDefault) WithPayload(payload *models.Error) *ChapterListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chapter list default response
func (o *ChapterListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChapterListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
