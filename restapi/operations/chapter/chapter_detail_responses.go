// Code generated by go-swagger; DO NOT EDIT.

package chapter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// ChapterDetailOKCode is the HTTP code returned for type ChapterDetailOK
const ChapterDetailOKCode int = 200

/*ChapterDetailOK 章节详情

swagger:response chapterDetailOK
*/
type ChapterDetailOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20025 `json:"body,omitempty"`
}

// NewChapterDetailOK creates ChapterDetailOK with default headers values
func NewChapterDetailOK() *ChapterDetailOK {
	return &ChapterDetailOK{}
}

// WithPayload adds the payload to the chapter detail o k response
func (o *ChapterDetailOK) WithPayload(payload *models.InlineResponse20025) *ChapterDetailOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chapter detail o k response
func (o *ChapterDetailOK) SetPayload(payload *models.InlineResponse20025) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChapterDetailOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ChapterDetailDefault error

swagger:response chapterDetailDefault
*/
type ChapterDetailDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewChapterDetailDefault creates ChapterDetailDefault with default headers values
func NewChapterDetailDefault(code int) *ChapterDetailDefault {
	if code <= 0 {
		code = 500
	}

	return &ChapterDetailDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the chapter detail default response
func (o *ChapterDetailDefault) WithStatusCode(code int) *ChapterDetailDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the chapter detail default response
func (o *ChapterDetailDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the chapter detail default response
func (o *ChapterDetailDefault) WithPayload(payload *models.Error) *ChapterDetailDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chapter detail default response
func (o *ChapterDetailDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChapterDetailDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
