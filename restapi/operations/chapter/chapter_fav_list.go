// Code generated by go-swagger; DO NOT EDIT.

package chapter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ChapterFavListHandlerFunc turns a function with the right signature into a chapter fav list handler
type ChapterFavListHandlerFunc func(ChapterFavListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ChapterFavListHandlerFunc) Handle(params ChapterFavListParams) middleware.Responder {
	return fn(params)
}

// ChapterFavListHandler interface for that can handle valid chapter fav list params
type ChapterFavListHandler interface {
	Handle(ChapterFavListParams) middleware.Responder
}

// NewChapterFavList creates a new http.Handler for the chapter fav list operation
func NewChapterFavList(ctx *middleware.Context, handler ChapterFavListHandler) *ChapterFavList {
	return &ChapterFavList{Context: ctx, Handler: handler}
}

/*ChapterFavList swagger:route GET /chapter/fav/list Chapter chapterFavList

收藏列表

收藏列表

*/
type ChapterFavList struct {
	Context *middleware.Context
	Handler ChapterFavListHandler
}

func (o *ChapterFavList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewChapterFavListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
