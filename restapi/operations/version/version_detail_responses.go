// Code generated by go-swagger; DO NOT EDIT.

package version

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// VersionDetailOKCode is the HTTP code returned for type VersionDetailOK
const VersionDetailOKCode int = 200

/*VersionDetailOK 详情

swagger:response versionDetailOK
*/
type VersionDetailOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20035 `json:"body,omitempty"`
}

// NewVersionDetailOK creates VersionDetailOK with default headers values
func NewVersionDetailOK() *VersionDetailOK {
	return &VersionDetailOK{}
}

// WithPayload adds the payload to the version detail o k response
func (o *VersionDetailOK) WithPayload(payload *models.InlineResponse20035) *VersionDetailOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version detail o k response
func (o *VersionDetailOK) SetPayload(payload *models.InlineResponse20035) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionDetailOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*VersionDetailDefault error

swagger:response versionDetailDefault
*/
type VersionDetailDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewVersionDetailDefault creates VersionDetailDefault with default headers values
func NewVersionDetailDefault(code int) *VersionDetailDefault {
	if code <= 0 {
		code = 500
	}

	return &VersionDetailDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the version detail default response
func (o *VersionDetailDefault) WithStatusCode(code int) *VersionDetailDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the version detail default response
func (o *VersionDetailDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the version detail default response
func (o *VersionDetailDefault) WithPayload(payload *models.Error) *VersionDetailDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version detail default response
func (o *VersionDetailDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionDetailDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
