// Code generated by go-swagger; DO NOT EDIT.

package version

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// VersionListHandlerFunc turns a function with the right signature into a version list handler
type VersionListHandlerFunc func(VersionListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn VersionListHandlerFunc) Handle(params VersionListParams) middleware.Responder {
	return fn(params)
}

// VersionListHandler interface for that can handle valid version list params
type VersionListHandler interface {
	Handle(VersionListParams) middleware.Responder
}

// NewVersionList creates a new http.Handler for the version list operation
func NewVersionList(ctx *middleware.Context, handler VersionListHandler) *VersionList {
	return &VersionList{Context: ctx, Handler: handler}
}

/*VersionList swagger:route GET /version/list Version versionList

获取列表

获取列表

*/
type VersionList struct {
	Context *middleware.Context
	Handler VersionListHandler
}

func (o *VersionList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewVersionListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
