// Code generated by go-swagger; DO NOT EDIT.

package version

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackendtest/models"
)

// VersionListOKCode is the HTTP code returned for type VersionListOK
const VersionListOKCode int = 200

/*VersionListOK 获取列表

swagger:response versionListOK
*/
type VersionListOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20036 `json:"body,omitempty"`
}

// NewVersionListOK creates VersionListOK with default headers values
func NewVersionListOK() *VersionListOK {
	return &VersionListOK{}
}

// WithPayload adds the payload to the version list o k response
func (o *VersionListOK) WithPayload(payload *models.InlineResponse20036) *VersionListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version list o k response
func (o *VersionListOK) SetPayload(payload *models.InlineResponse20036) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*VersionListDefault error

swagger:response versionListDefault
*/
type VersionListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewVersionListDefault creates VersionListDefault with default headers values
func NewVersionListDefault(code int) *VersionListDefault {
	if code <= 0 {
		code = 500
	}

	return &VersionListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the version list default response
func (o *VersionListDefault) WithStatusCode(code int) *VersionListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the version list default response
func (o *VersionListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the version list default response
func (o *VersionListDefault) WithPayload(payload *models.Error) *VersionListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version list default response
func (o *VersionListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
