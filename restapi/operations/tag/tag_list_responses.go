// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// TagListOKCode is the HTTP code returned for type TagListOK
const TagListOKCode int = 200

/*TagListOK 获取专辑列表

swagger:response tagListOK
*/
type TagListOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20034 `json:"body,omitempty"`
}

// NewTagListOK creates TagListOK with default headers values
func NewTagListOK() *TagListOK {
	return &TagListOK{}
}

// WithPayload adds the payload to the tag list o k response
func (o *TagListOK) WithPayload(payload *models.InlineResponse20034) *TagListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tag list o k response
func (o *TagListOK) SetPayload(payload *models.InlineResponse20034) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TagListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*TagListDefault error

swagger:response tagListDefault
*/
type TagListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTagListDefault creates TagListDefault with default headers values
func NewTagListDefault(code int) *TagListDefault {
	if code <= 0 {
		code = 500
	}

	return &TagListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the tag list default response
func (o *TagListDefault) WithStatusCode(code int) *TagListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the tag list default response
func (o *TagListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the tag list default response
func (o *TagListDefault) WithPayload(payload *models.Error) *TagListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tag list default response
func (o *TagListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TagListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
