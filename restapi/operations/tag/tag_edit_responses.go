// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// TagEditOKCode is the HTTP code returned for type TagEditOK
const TagEditOKCode int = 200

/*TagEditOK 上传成功，返回成功信息

swagger:response tagEditOK
*/
type TagEditOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20019 `json:"body,omitempty"`
}

// NewTagEditOK creates TagEditOK with default headers values
func NewTagEditOK() *TagEditOK {
	return &TagEditOK{}
}

// WithPayload adds the payload to the tag edit o k response
func (o *TagEditOK) WithPayload(payload *models.InlineResponse20019) *TagEditOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tag edit o k response
func (o *TagEditOK) SetPayload(payload *models.InlineResponse20019) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TagEditOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*TagEditDefault error

swagger:response tagEditDefault
*/
type TagEditDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTagEditDefault creates TagEditDefault with default headers values
func NewTagEditDefault(code int) *TagEditDefault {
	if code <= 0 {
		code = 500
	}

	return &TagEditDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the tag edit default response
func (o *TagEditDefault) WithStatusCode(code int) *TagEditDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the tag edit default response
func (o *TagEditDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the tag edit default response
func (o *TagEditDefault) WithPayload(payload *models.Error) *TagEditDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tag edit default response
func (o *TagEditDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TagEditDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
