// Code generated by go-swagger; DO NOT EDIT.

package album

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// AlbumUploadOKCode is the HTTP code returned for type AlbumUploadOK
const AlbumUploadOKCode int = 200

/*AlbumUploadOK 上传成功，返回成功信息

swagger:response albumUploadOK
*/
type AlbumUploadOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20016 `json:"body,omitempty"`
}

// NewAlbumUploadOK creates AlbumUploadOK with default headers values
func NewAlbumUploadOK() *AlbumUploadOK {
	return &AlbumUploadOK{}
}

// WithPayload adds the payload to the album upload o k response
func (o *AlbumUploadOK) WithPayload(payload *models.InlineResponse20016) *AlbumUploadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the album upload o k response
func (o *AlbumUploadOK) SetPayload(payload *models.InlineResponse20016) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AlbumUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AlbumUploadDefault error

swagger:response albumUploadDefault
*/
type AlbumUploadDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAlbumUploadDefault creates AlbumUploadDefault with default headers values
func NewAlbumUploadDefault(code int) *AlbumUploadDefault {
	if code <= 0 {
		code = 500
	}

	return &AlbumUploadDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the album upload default response
func (o *AlbumUploadDefault) WithStatusCode(code int) *AlbumUploadDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the album upload default response
func (o *AlbumUploadDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the album upload default response
func (o *AlbumUploadDefault) WithPayload(payload *models.Error) *AlbumUploadDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the album upload default response
func (o *AlbumUploadDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AlbumUploadDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
