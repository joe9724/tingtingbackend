// Code generated by go-swagger; DO NOT EDIT.

package album

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/tingtingbackend/models"
)

// AlbumEditOKCode is the HTTP code returned for type AlbumEditOK
const AlbumEditOKCode int = 200

/*AlbumEditOK 上传成功，返回成功信息

swagger:response albumEditOK
*/
type AlbumEditOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20015 `json:"body,omitempty"`
}

// NewAlbumEditOK creates AlbumEditOK with default headers values
func NewAlbumEditOK() *AlbumEditOK {
	return &AlbumEditOK{}
}

// WithPayload adds the payload to the album edit o k response
func (o *AlbumEditOK) WithPayload(payload *models.InlineResponse20015) *AlbumEditOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the album edit o k response
func (o *AlbumEditOK) SetPayload(payload *models.InlineResponse20015) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AlbumEditOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AlbumEditDefault error

swagger:response albumEditDefault
*/
type AlbumEditDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAlbumEditDefault creates AlbumEditDefault with default headers values
func NewAlbumEditDefault(code int) *AlbumEditDefault {
	if code <= 0 {
		code = 500
	}

	return &AlbumEditDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the album edit default response
func (o *AlbumEditDefault) WithStatusCode(code int) *AlbumEditDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the album edit default response
func (o *AlbumEditDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the album edit default response
func (o *AlbumEditDefault) WithPayload(payload *models.Error) *AlbumEditDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the album edit default response
func (o *AlbumEditDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AlbumEditDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
