// Code generated by go-swagger; DO NOT EDIT.

package album

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// AlbumEditHandlerFunc turns a function with the right signature into a album edit handler
type AlbumEditHandlerFunc func(AlbumEditParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AlbumEditHandlerFunc) Handle(params AlbumEditParams) middleware.Responder {
	return fn(params)
}

// AlbumEditHandler interface for that can handle valid album edit params
type AlbumEditHandler interface {
	Handle(AlbumEditParams) middleware.Responder
}

// NewAlbumEdit creates a new http.Handler for the album edit operation
func NewAlbumEdit(ctx *middleware.Context, handler AlbumEditHandler) *AlbumEdit {
	return &AlbumEdit{Context: ctx, Handler: handler}
}

/*AlbumEdit swagger:route POST /album/edit Album albumEdit

编辑一个专辑

*/
type AlbumEdit struct {
	Context *middleware.Context
	Handler AlbumEditHandler
}

func (o *AlbumEdit) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAlbumEditParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
