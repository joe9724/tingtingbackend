// Code generated by go-swagger; DO NOT EDIT.

package banner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "tingtingbackend/models"
)

// BannerUploadOKCode is the HTTP code returned for type BannerUploadOK
const BannerUploadOKCode int = 200

/*BannerUploadOK 上传成功，返回成功信息

swagger:response bannerUploadOK
*/
type BannerUploadOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2002 `json:"body,omitempty"`
}

// NewBannerUploadOK creates BannerUploadOK with default headers values
func NewBannerUploadOK() *BannerUploadOK {
	return &BannerUploadOK{}
}

// WithPayload adds the payload to the banner upload o k response
func (o *BannerUploadOK) WithPayload(payload *models.InlineResponse2002) *BannerUploadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the banner upload o k response
func (o *BannerUploadOK) SetPayload(payload *models.InlineResponse2002) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BannerUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*BannerUploadDefault error

swagger:response bannerUploadDefault
*/
type BannerUploadDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBannerUploadDefault creates BannerUploadDefault with default headers values
func NewBannerUploadDefault(code int) *BannerUploadDefault {
	if code <= 0 {
		code = 500
	}

	return &BannerUploadDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the banner upload default response
func (o *BannerUploadDefault) WithStatusCode(code int) *BannerUploadDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the banner upload default response
func (o *BannerUploadDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the banner upload default response
func (o *BannerUploadDefault) WithPayload(payload *models.Error) *BannerUploadDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the banner upload default response
func (o *BannerUploadDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BannerUploadDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
